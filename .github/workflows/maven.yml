name: Java CI with Maven

on:
  push:
    branches: [ "qa" ]

jobs:

  create-llm-index:
    runs-on: ubuntu-latest

    steps:
      - name: 🧾 Checkout project
        uses: actions/checkout@v4

      - name: ☕ Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: ⚙️Build and test
        continue-on-error: false
        run: mvn clean verify

      - name: 🧠 Generate LLM index
        id: QAIndex
        uses: Jacobsonius/qa-assistance-action@master
        with:
          key: ${{ secrets.KEY }}
          action-name: INDEX
          target-value: '80'
          build-report-dir: ./
          test-report-dir: ./target/surefire-reports
          coverage-report-dir: ./target/site/jacoco
          input-dir: ./
          output-dir: ./

      - name: 📁 Prepare artefacts directory
        run: |
          mkdir -p qa-artefacts
          cp ./target/site/jacoco/index.html qa-artefacts/jacoco.html
          cp ./target/surefire-reports/*.xml qa-artefacts/
          cp -r .qa qa-artefacts/

      - name: 💾 Save artefact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: qa-artefacts
          overwrite: true
          include-hidden-files: true
          path: qa-artefacts/

  update-tests:
    needs: create-llm-index
    if: needs.create-llm-index.result == 'success'
    uses: ./.github/workflows/reusable.yml
    with:
      attempt: 1
    secrets:
      MY_SECRET_KEY: ${{ secrets.KEY }}

  update-tests-retry-1:
    needs: update-tests
    if: needs.update-tests.result == 'failure' || needs.update-tests.outputs.build_exit_code != '0'
    uses: ./.github/workflows/reusable.yml
    with:
      attempt: 2
    secrets:
      MY_SECRET_KEY: ${{ secrets.KEY }}

  update-tests-retry-2:
    needs: update-tests-retry-1
    if: needs.update-tests-retry-1.result == 'failure' || needs.update-tests-retry-1.outputs.build_exit_code != '0'
    uses: ./.github/workflows/reusable.yml
    with:
      attempt: 3
    secrets:
      MY_SECRET_KEY: ${{ secrets.KEY }}